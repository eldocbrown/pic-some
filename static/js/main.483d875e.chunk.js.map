{"version":3,"sources":["utils/firebase.js","appContext.js","components/Header.js","hooks/useHover.js","components/CartItem.js","pages/Cart.js","components/Image.js","utils/index.js","pages/Photos.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","AppContext","React","createContext","AppContextProvider","children","useState","allPhotos","setAllPhotos","cartItems","setCartItems","useEffect","database","ref","on","snapshot","photos","val","newState","photo","push","url","id","isFavorite","Provider","value","toggleFavorite","prevAllPhotos","map","ph","addItemToCart","item","prevCartItems","removeItemFromCart","filter","Header","useContext","to","length","className","useHover","initialValue","hovered","setHovered","enter","leave","useRef","myRef","current","addEventListener","removeEventListener","CartItem","trashIconHover","onClick","alt","src","width","Cart","ordering","setOrdering","cartItemElements","orderPriceDisplay","toLocaleString","style","currency","setTimeout","disabled","Image","img","handleFavoriteClick","handleAddToCartClick","handleRemoveFromCartClick","some","i","getClass","Photos","App","basename","process","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.483d875e.chunk.js","sourcesContent":["import firebase from 'firebase'\n\n// Should be a different config for different environments\nconst firebaseConfig = {\n    apiKey: \"AIzaSyB9SSWTuNUb2HUHzBnWNAk8J4wNx9vfQAE\",\n    authDomain: \"pic-some-300b5.firebaseapp.com\",\n    projectId: \"pic-some-300b5\",\n    storageBucket: \"pic-some-300b5.appspot.com\",\n    messagingSenderId: \"440861919380\",\n    appId: \"1:440861919380:web:6734f4c08306a1e9b5cc81\"\n  }\n\nfirebase.initializeApp(firebaseConfig)\n\nexport default firebase\n","import React, {useState, useEffect} from 'react'\nimport firebase from './utils/firebase'\n\nconst AppContext = React.createContext()\n\nfunction AppContextProvider({children}) {\n\n    const [ allPhotos, setAllPhotos ] = useState([])\n    const [ cartItems, setCartItems ] = useState([])\n\n    // Get images data after 1st render is complete\n    useEffect(() => {\n      const itemsRef = firebase.database().ref('photos')\n      itemsRef.on('value', (snapshot) => {\n        let photos = snapshot.val();\n        let newState = [];\n        for (let photo in photos) {\n          newState.push({\n            url: photos[photo],\n            id: photo,\n            isFavorite: false\n          });\n        }\n        setAllPhotos(newState)\n      })\n    }, [])\n\n    const toggleFavorite = (id) => { // Loop through all photos and flip the isFavorite property only on the photo with the id from the parameter\n      setAllPhotos((prevAllPhotos) => prevAllPhotos.map((ph) => ph.id === id ? {...ph, isFavorite: !ph.isFavorite} : ph))\n    }\n\n    const addItemToCart = (item) => {\n      setCartItems((prevCartItems) => [...prevCartItems, item])\n    }\n\n    const removeItemFromCart = (item) => {\n      setCartItems((prevCartItems) => prevCartItems.filter((ph) => ph.id !== item.id))\n    }\n\n    return (\n      <AppContext.Provider value={{allPhotos, toggleFavorite, cartItems, addItemToCart, removeItemFromCart}}>\n        {children}\n      </AppContext.Provider>\n    )\n}\n\nexport { AppContextProvider, AppContext }\n","import React, { useContext } from \"react\"\nimport { Link } from \"react-router-dom\"\n\nimport '../css/Header.css'\nimport { AppContext } from '../appContext'\n\nfunction Header() {\n    const { cartItems } = useContext(AppContext)\n\n    const cartIcon = () => cartItems.length ?\n      <i className=\"ri-shopping-cart-fill ri-fw ri-2x\"></i> // Cart with items\n      :\n      <i className=\"ri-shopping-cart-line ri-fw ri-2x\"></i> // Cart empty\n\n    return (\n        <header>\n            <Link to='/'><h2>Pic Some</h2></Link>\n            <Link to=\"/cart\">{cartIcon()}</Link>\n        </header>\n    )\n}\n\nexport default Header\n","import {useState, useRef, useEffect} from 'react'\n\nfunction useHover(initialValue) {\n\n  const [ hovered, setHovered ] = useState(initialValue)\n\n  const enter = () => setHovered(true)\n\n  const leave = () => setHovered(false)\n\n  const ref = useRef(null)\n\n  useEffect(() => {\n    const myRef = ref.current\n\n    myRef.addEventListener('mouseenter', enter)\n    myRef.addEventListener('mouseleave', leave)\n\n    return () =>\n     {\n      myRef.removeEventListener('mouseenter', enter)\n      myRef.removeEventListener('mouseleave', leave)\n    }\n  }, [])\n\n  return [ hovered, ref ]\n}\n\nexport default useHover\n","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nimport '../css/CartItem.css'\nimport useHover from '../hooks/useHover'\n\nfunction CartItem({item, removeItemFromCart}) {\n\n  const [ trashIconHover, ref ] = useHover(false)\n\n  useEffect(() => {\n     ref.current.className= trashIconHover ? 'ri-delete-bin-fill' : 'ri-delete-bin-line'\n  }, [trashIconHover, ref])\n\n  const handleClick = () => removeItemFromCart(item)\n\n  return (\n    <div className=\"cart-item\">\n      <i ref={ref} className='ri-delete-bin-line' onClick={handleClick}></i>\n      <img alt='' src={item.url} width=\"130px\"/>\n      <p>$5.99</p>\n    </div>\n  )\n}\n\nCartItem.propTypes = {\n  item: PropTypes.shape({\n    url: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired\n  }),\n  removeItemFromCart: PropTypes.func.isRequired\n}\n\nexport default CartItem\n","import React, { useState, useContext } from \"react\"\n\nimport CartItem from '../components/CartItem'\nimport { AppContext } from '../appContext'\nimport '../css/Cart.css'\n\nfunction Cart() {\n\n  const FIXED_PRICE = 5.99\n\n  const TIMEOUT = 3000\n\n  const { cartItems, removeItemFromCart } = useContext(AppContext)\n\n  const [ ordering, setOrdering ] = useState(false)\n\n  const cartItemElements = cartItems.map((item) => <CartItem key={item.id} item={item} removeItemFromCart={removeItemFromCart}/>)\n\n  const orderPrice = cartItems.length * FIXED_PRICE\n\n  const orderPriceDisplay = orderPrice.toLocaleString(\"en-US\", {style: \"currency\", currency: \"USD\"})\n\n  const orderButtonDisplay = () => ordering ? 'Ordering...' : 'Place Order'\n\n  const handlePlaceOrderClick = () => { // Simulate a place order\n    setOrdering(true)\n    setTimeout(() => {\n      cartItems.map((item) => removeItemFromCart(item))\n      setOrdering(false)\n    }, TIMEOUT)\n  }\n\n  return (\n    <main className=\"cart-page\">\n      <h1>Check out</h1>\n      {cartItemElements}\n      <p className=\"total-cost\">Total: {orderPriceDisplay}</p>\n      {\n        cartItems.length ?\n          <div className=\"order-button\">\n            <button onClick={handlePlaceOrderClick} disabled={ordering}>{orderButtonDisplay()}</button>\n          </div>\n          :\n          <p>No items in cart</p>\n      }\n    </main>\n  )\n}\n\nexport default Cart\n","import React, { useContext }from 'react'\nimport PropTypes from 'prop-types'\nimport '../css/Image.css'\nimport { AppContext } from '../appContext'\nimport useHover from '../hooks/useHover'\n\nfunction Image({className, img}) {\n\n  const { toggleFavorite, addItemToCart, removeItemFromCart, cartItems } = useContext(AppContext)\n\n  const [ hovered, ref ] = useHover(false)\n\n  const handleFavoriteClick = () => toggleFavorite(img.id)\n\n  const handleAddToCartClick = () => addItemToCart(img)\n\n  const handleRemoveFromCartClick = () => removeItemFromCart(img)\n\n  // heartIcon\n  const heartIcon = () => {\n    if (img.isFavorite) { return <i className=\"ri-heart-fill favorite\" onClick={handleFavoriteClick}></i> }\n    else if (hovered) { return <i className=\"ri-heart-line favorite\" onClick={handleFavoriteClick}></i> }\n  }\n\n  // cartActionIcon\n  const cartIcon = () => {\n    if (cartItems.some((i) => i.id === img.id)) { return <i className=\"ri-delete-bin-fill cart\" onClick={handleRemoveFromCartClick}></i> }\n    else if (hovered) { return <i className=\"ri-add-circle-line cart\" onClick={handleAddToCartClick}></i> }\n  }\n\n  return (\n    <div ref={ref} className={`${className} image-container`}>\n      <img src={img.url} alt='' className=\"image-grid\"/>\n      {heartIcon()}\n      {cartIcon()}\n    </div>\n  )\n}\n\nImage.propTypes = {\n  className: PropTypes.string,\n  img: PropTypes.shape({\n    url: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    isFavorite: PropTypes.bool\n  })\n}\n\nexport default Image\n","export function getClass(i) {\n    if (i % 5 === 0) {\n        return 'big';\n    }\n    else if (i % 6 === 0) {\n        return 'wide'\n    }\n}","import React, { useContext } from 'react'\n\nimport { AppContext } from '../appContext'\nimport Image from '../components/Image'\nimport { getClass } from '../utils/index'\n\nfunction Photos() {\n\n    const { allPhotos } = useContext(AppContext)\n\n    return (\n          <main className=\"photos\">\n            {\n              allPhotos.map((ph, i) => <Image key={ph.id} img={ph} className={getClass(i)} />)\n            }\n          </main>\n    )\n}\n\nexport default Photos\n","import React from \"react\"\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\n\nimport Header from \"./components/Header\"\nimport Cart from \"./pages/Cart\"\nimport Photos from \"./pages/Photos\"\n\nfunction App() {\n    return (\n      <>\n        <Router basename={process.env.PUBLIC_URL}>\n            <Header />\n\n            <Switch>\n              <Route exact path='/' component={Photos}></Route>\n              <Route path='/cart' component={Cart}></Route>\n            </Switch>\n        </Router>\n      </>\n    )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport './styles.css';\nimport App from \"./App\"\nimport { AppContextProvider } from './appContext'\n\nReactDOM.render(<AppContextProvider><App /></AppContextProvider>, document.getElementById(\"root\"))\n"],"sourceRoot":""}